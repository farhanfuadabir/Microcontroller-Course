
Demo Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000780  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000780  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080006c  0080006c  00000820  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000193  00000000  00000000  000008a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000ff  00000000  00000000  00000a37  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000016f  00000000  00000000  00000b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00000ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001e5  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000056  00000000  00000000  00000edd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00000f33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e8       	ldi	r30, 0x80	; 128
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 be 03 	jmp	0x77c	; 0x77c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
unsigned int counter = 243;
unsigned char anodeSelect = 0;

int main(void)
{
	DDRA |= 0b11100000;	
  92:	8a b3       	in	r24, 0x1a	; 26
  94:	80 6e       	ori	r24, 0xE0	; 224
  96:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;	
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	87 bb       	out	0x17, r24	; 23
	DDRD &= ~(1 << PD0);		//Input for Switch
  9c:	88 98       	cbi	0x11, 0	; 17
	
	//----------------------------------------------------------------------------
	TCCR0 |= (1 << CS02);		//Timer0, Normal mode, 256 prescaler
  9e:	83 b7       	in	r24, 0x33	; 51
  a0:	84 60       	ori	r24, 0x04	; 4
  a2:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0);		//Enable Timer0 overflow interrupt
  a4:	89 b7       	in	r24, 0x39	; 57
  a6:	81 60       	ori	r24, 0x01	; 1
  a8:	89 bf       	out	0x39, r24	; 57
	TCNT0 = 0;					//Clear TCNT0
  aa:	12 be       	out	0x32, r1	; 50
	sei();						//Enable Global interrupt
  ac:	78 94       	sei
	//----------------------------------------------------------------------------
	
	while(1)
	{		
		show[0] = counter / 100;
  ae:	4d e6       	ldi	r20, 0x6D	; 109
  b0:	50 e0       	ldi	r21, 0x00	; 0
		show[1] = (counter / 10) % 10;
  b2:	ce e6       	ldi	r28, 0x6E	; 110
  b4:	d0 e0       	ldi	r29, 0x00	; 0
		show[2] = counter % 10;
  b6:	ef e6       	ldi	r30, 0x6F	; 111
  b8:	f0 e0       	ldi	r31, 0x00	; 0
	sei();						//Enable Global interrupt
	//----------------------------------------------------------------------------
	
	while(1)
	{		
		show[0] = counter / 100;
  ba:	e0 90 60 00 	lds	r14, 0x0060
  be:	f0 90 61 00 	lds	r15, 0x0061
  c2:	97 01       	movw	r18, r14
  c4:	36 95       	lsr	r19
  c6:	27 95       	ror	r18
  c8:	36 95       	lsr	r19
  ca:	27 95       	ror	r18
  cc:	ab e7       	ldi	r26, 0x7B	; 123
  ce:	b4 e1       	ldi	r27, 0x14	; 20
  d0:	0e 94 00 01 	call	0x200	; 0x200 <__umulhisi3>
  d4:	96 95       	lsr	r25
  d6:	87 95       	ror	r24
  d8:	d8 2e       	mov	r13, r24
		show[1] = (counter / 10) % 10;
  da:	97 01       	movw	r18, r14
  dc:	ad ec       	ldi	r26, 0xCD	; 205
  de:	bc ec       	ldi	r27, 0xCC	; 204
  e0:	0e 94 00 01 	call	0x200	; 0x200 <__umulhisi3>
  e4:	8c 01       	movw	r16, r24
  e6:	16 95       	lsr	r17
  e8:	07 95       	ror	r16
  ea:	16 95       	lsr	r17
  ec:	07 95       	ror	r16
  ee:	16 95       	lsr	r17
  f0:	07 95       	ror	r16
  f2:	98 01       	movw	r18, r16
  f4:	0e 94 00 01 	call	0x200	; 0x200 <__umulhisi3>
  f8:	96 95       	lsr	r25
  fa:	87 95       	ror	r24
  fc:	96 95       	lsr	r25
  fe:	87 95       	ror	r24
 100:	96 95       	lsr	r25
 102:	87 95       	ror	r24
 104:	9c 01       	movw	r18, r24
 106:	22 0f       	add	r18, r18
 108:	33 1f       	adc	r19, r19
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	82 0f       	add	r24, r18
 118:	93 1f       	adc	r25, r19
 11a:	20 2f       	mov	r18, r16
 11c:	28 1b       	sub	r18, r24
 11e:	82 2f       	mov	r24, r18
		show[2] = counter % 10;
 120:	98 01       	movw	r18, r16
 122:	22 0f       	add	r18, r18
 124:	33 1f       	adc	r19, r19
 126:	00 0f       	add	r16, r16
 128:	11 1f       	adc	r17, r17
 12a:	00 0f       	add	r16, r16
 12c:	11 1f       	adc	r17, r17
 12e:	00 0f       	add	r16, r16
 130:	11 1f       	adc	r17, r17
 132:	02 0f       	add	r16, r18
 134:	13 1f       	adc	r17, r19
 136:	e0 1a       	sub	r14, r16
	sei();						//Enable Global interrupt
	//----------------------------------------------------------------------------
	
	while(1)
	{		
		show[0] = counter / 100;
 138:	da 01       	movw	r26, r20
 13a:	dc 92       	st	X, r13
		show[1] = (counter / 10) % 10;
 13c:	88 83       	st	Y, r24
		show[2] = counter % 10;
 13e:	e0 82       	st	Z, r14
		
		if(!(PIND & (1 << PD0)))
 140:	80 99       	sbic	0x10, 0	; 16
 142:	fa cf       	rjmp	.-12     	; 0x138 <main+0xa6>
		{
			while(!(PIND & (1 << PD0)));
 144:	80 9b       	sbis	0x10, 0	; 16
 146:	fe cf       	rjmp	.-4      	; 0x144 <main+0xb2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	bf e7       	ldi	r27, 0x7F	; 127
 14a:	28 e3       	ldi	r18, 0x38	; 56
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	b1 50       	subi	r27, 0x01	; 1
 150:	20 40       	sbci	r18, 0x00	; 0
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xbc>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xc6>
 158:	00 00       	nop
			_delay_ms(50);
			
			counter++;
 15a:	80 91 60 00 	lds	r24, 0x0060
 15e:	90 91 61 00 	lds	r25, 0x0061
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	90 93 61 00 	sts	0x0061, r25
 168:	80 93 60 00 	sts	0x0060, r24
			
			if(counter > 999)
 16c:	88 3e       	cpi	r24, 0xE8	; 232
 16e:	93 40       	sbci	r25, 0x03	; 3
 170:	08 f4       	brcc	.+2      	; 0x174 <main+0xe2>
 172:	a3 cf       	rjmp	.-186    	; 0xba <main+0x28>
			counter = 0;
 174:	10 92 61 00 	sts	0x0061, r1
 178:	10 92 60 00 	sts	0x0060, r1
 17c:	9e cf       	rjmp	.-196    	; 0xba <main+0x28>

0000017e <__vector_9>:
		}
	}		
}

ISR(TIMER0_OVF_vect) //ISR for Timer0 overflow
{
 17e:	1f 92       	push	r1
 180:	0f 92       	push	r0
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	0f 92       	push	r0
 186:	11 24       	eor	r1, r1
 188:	8f 93       	push	r24
 18a:	ef 93       	push	r30
 18c:	ff 93       	push	r31
	anodeSelect++;
 18e:	80 91 6c 00 	lds	r24, 0x006C
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 6c 00 	sts	0x006C, r24
	
	if(anodeSelect == 1)
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	59 f4       	brne	.+22     	; 0x1b2 <__vector_9+0x34>
	{
		PORTA &= ~(1 << PA6);
 19c:	de 98       	cbi	0x1b, 6	; 27
		PORTA &= ~(1 << PA7);
 19e:	df 98       	cbi	0x1b, 7	; 27
		PORTA |= (1 << PA5);
 1a0:	dd 9a       	sbi	0x1b, 5	; 27
		PORTB = digit[show[0]];		
 1a2:	e0 91 6d 00 	lds	r30, 0x006D
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	ee 59       	subi	r30, 0x9E	; 158
 1aa:	ff 4f       	sbci	r31, 0xFF	; 255
 1ac:	80 81       	ld	r24, Z
 1ae:	88 bb       	out	0x18, r24	; 24
 1b0:	1b c0       	rjmp	.+54     	; 0x1e8 <__vector_9+0x6a>
	}
	else if(anodeSelect == 2)
 1b2:	82 30       	cpi	r24, 0x02	; 2
 1b4:	59 f4       	brne	.+22     	; 0x1cc <__vector_9+0x4e>
	{
		PORTA &= ~(1 << PA5);
 1b6:	dd 98       	cbi	0x1b, 5	; 27
		PORTA &= ~(1 << PA7);
 1b8:	df 98       	cbi	0x1b, 7	; 27
		PORTA |= (1 << PA6);
 1ba:	de 9a       	sbi	0x1b, 6	; 27
		PORTB = digit[show[1]];		
 1bc:	e0 91 6e 00 	lds	r30, 0x006E
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	ee 59       	subi	r30, 0x9E	; 158
 1c4:	ff 4f       	sbci	r31, 0xFF	; 255
 1c6:	80 81       	ld	r24, Z
 1c8:	88 bb       	out	0x18, r24	; 24
 1ca:	0e c0       	rjmp	.+28     	; 0x1e8 <__vector_9+0x6a>
	}
	else if(anodeSelect == 3)
 1cc:	83 30       	cpi	r24, 0x03	; 3
 1ce:	61 f4       	brne	.+24     	; 0x1e8 <__vector_9+0x6a>
	{
		PORTA &= ~(1 << PA5);
 1d0:	dd 98       	cbi	0x1b, 5	; 27
		PORTA &= ~(1 << PA6);
 1d2:	de 98       	cbi	0x1b, 6	; 27
		PORTA |= (1 << PA7);
 1d4:	df 9a       	sbi	0x1b, 7	; 27
		PORTB = digit[show[2]];
 1d6:	e0 91 6f 00 	lds	r30, 0x006F
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	ee 59       	subi	r30, 0x9E	; 158
 1de:	ff 4f       	sbci	r31, 0xFF	; 255
 1e0:	80 81       	ld	r24, Z
 1e2:	88 bb       	out	0x18, r24	; 24
		
		anodeSelect = 0;
 1e4:	10 92 6c 00 	sts	0x006C, r1
	}

	TCNT0 = 0;			//Clear TCNT0
 1e8:	12 be       	out	0x32, r1	; 50
	TIFR |= 1 << TOV0;	//Clear Timer0 Overflow Flag
 1ea:	88 b7       	in	r24, 0x38	; 56
 1ec:	81 60       	ori	r24, 0x01	; 1
 1ee:	88 bf       	out	0x38, r24	; 56
 1f0:	ff 91       	pop	r31
 1f2:	ef 91       	pop	r30
 1f4:	8f 91       	pop	r24
 1f6:	0f 90       	pop	r0
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	0f 90       	pop	r0
 1fc:	1f 90       	pop	r1
 1fe:	18 95       	reti

00000200 <__umulhisi3>:
 200:	a2 9f       	mul	r26, r18
 202:	b0 01       	movw	r22, r0
 204:	b3 9f       	mul	r27, r19
 206:	c0 01       	movw	r24, r0
 208:	a3 9f       	mul	r26, r19
 20a:	70 0d       	add	r23, r0
 20c:	81 1d       	adc	r24, r1
 20e:	11 24       	eor	r1, r1
 210:	91 1d       	adc	r25, r1
 212:	b2 9f       	mul	r27, r18
 214:	70 0d       	add	r23, r0
 216:	81 1d       	adc	r24, r1
 218:	11 24       	eor	r1, r1
 21a:	91 1d       	adc	r25, r1
 21c:	08 95       	ret

0000021e <vfprintf>:
 21e:	ac e0       	ldi	r26, 0x0C	; 12
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	e5 e1       	ldi	r30, 0x15	; 21
 224:	f1 e0       	ldi	r31, 0x01	; 1
 226:	0c 94 87 03 	jmp	0x70e	; 0x70e <__prologue_saves__>
 22a:	7c 01       	movw	r14, r24
 22c:	6b 01       	movw	r12, r22
 22e:	8a 01       	movw	r16, r20
 230:	fc 01       	movw	r30, r24
 232:	17 82       	std	Z+7, r1	; 0x07
 234:	16 82       	std	Z+6, r1	; 0x06
 236:	83 81       	ldd	r24, Z+3	; 0x03
 238:	81 ff       	sbrs	r24, 1
 23a:	bd c1       	rjmp	.+890    	; 0x5b6 <__stack+0x157>
 23c:	ce 01       	movw	r24, r28
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	4c 01       	movw	r8, r24
 242:	f7 01       	movw	r30, r14
 244:	93 81       	ldd	r25, Z+3	; 0x03
 246:	f6 01       	movw	r30, r12
 248:	93 fd       	sbrc	r25, 3
 24a:	85 91       	lpm	r24, Z+
 24c:	93 ff       	sbrs	r25, 3
 24e:	81 91       	ld	r24, Z+
 250:	6f 01       	movw	r12, r30
 252:	88 23       	and	r24, r24
 254:	09 f4       	brne	.+2      	; 0x258 <vfprintf+0x3a>
 256:	ab c1       	rjmp	.+854    	; 0x5ae <__stack+0x14f>
 258:	85 32       	cpi	r24, 0x25	; 37
 25a:	39 f4       	brne	.+14     	; 0x26a <vfprintf+0x4c>
 25c:	93 fd       	sbrc	r25, 3
 25e:	85 91       	lpm	r24, Z+
 260:	93 ff       	sbrs	r25, 3
 262:	81 91       	ld	r24, Z+
 264:	6f 01       	movw	r12, r30
 266:	85 32       	cpi	r24, 0x25	; 37
 268:	29 f4       	brne	.+10     	; 0x274 <vfprintf+0x56>
 26a:	b7 01       	movw	r22, r14
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 272:	e7 cf       	rjmp	.-50     	; 0x242 <vfprintf+0x24>
 274:	51 2c       	mov	r5, r1
 276:	31 2c       	mov	r3, r1
 278:	20 e0       	ldi	r18, 0x00	; 0
 27a:	20 32       	cpi	r18, 0x20	; 32
 27c:	a0 f4       	brcc	.+40     	; 0x2a6 <vfprintf+0x88>
 27e:	8b 32       	cpi	r24, 0x2B	; 43
 280:	69 f0       	breq	.+26     	; 0x29c <vfprintf+0x7e>
 282:	30 f4       	brcc	.+12     	; 0x290 <vfprintf+0x72>
 284:	80 32       	cpi	r24, 0x20	; 32
 286:	59 f0       	breq	.+22     	; 0x29e <vfprintf+0x80>
 288:	83 32       	cpi	r24, 0x23	; 35
 28a:	69 f4       	brne	.+26     	; 0x2a6 <vfprintf+0x88>
 28c:	20 61       	ori	r18, 0x10	; 16
 28e:	2c c0       	rjmp	.+88     	; 0x2e8 <vfprintf+0xca>
 290:	8d 32       	cpi	r24, 0x2D	; 45
 292:	39 f0       	breq	.+14     	; 0x2a2 <vfprintf+0x84>
 294:	80 33       	cpi	r24, 0x30	; 48
 296:	39 f4       	brne	.+14     	; 0x2a6 <vfprintf+0x88>
 298:	21 60       	ori	r18, 0x01	; 1
 29a:	26 c0       	rjmp	.+76     	; 0x2e8 <vfprintf+0xca>
 29c:	22 60       	ori	r18, 0x02	; 2
 29e:	24 60       	ori	r18, 0x04	; 4
 2a0:	23 c0       	rjmp	.+70     	; 0x2e8 <vfprintf+0xca>
 2a2:	28 60       	ori	r18, 0x08	; 8
 2a4:	21 c0       	rjmp	.+66     	; 0x2e8 <vfprintf+0xca>
 2a6:	27 fd       	sbrc	r18, 7
 2a8:	27 c0       	rjmp	.+78     	; 0x2f8 <vfprintf+0xda>
 2aa:	30 ed       	ldi	r19, 0xD0	; 208
 2ac:	38 0f       	add	r19, r24
 2ae:	3a 30       	cpi	r19, 0x0A	; 10
 2b0:	78 f4       	brcc	.+30     	; 0x2d0 <vfprintf+0xb2>
 2b2:	26 ff       	sbrs	r18, 6
 2b4:	06 c0       	rjmp	.+12     	; 0x2c2 <vfprintf+0xa4>
 2b6:	fa e0       	ldi	r31, 0x0A	; 10
 2b8:	5f 9e       	mul	r5, r31
 2ba:	30 0d       	add	r19, r0
 2bc:	11 24       	eor	r1, r1
 2be:	53 2e       	mov	r5, r19
 2c0:	13 c0       	rjmp	.+38     	; 0x2e8 <vfprintf+0xca>
 2c2:	8a e0       	ldi	r24, 0x0A	; 10
 2c4:	38 9e       	mul	r3, r24
 2c6:	30 0d       	add	r19, r0
 2c8:	11 24       	eor	r1, r1
 2ca:	33 2e       	mov	r3, r19
 2cc:	20 62       	ori	r18, 0x20	; 32
 2ce:	0c c0       	rjmp	.+24     	; 0x2e8 <vfprintf+0xca>
 2d0:	8e 32       	cpi	r24, 0x2E	; 46
 2d2:	21 f4       	brne	.+8      	; 0x2dc <vfprintf+0xbe>
 2d4:	26 fd       	sbrc	r18, 6
 2d6:	6b c1       	rjmp	.+726    	; 0x5ae <__stack+0x14f>
 2d8:	20 64       	ori	r18, 0x40	; 64
 2da:	06 c0       	rjmp	.+12     	; 0x2e8 <vfprintf+0xca>
 2dc:	8c 36       	cpi	r24, 0x6C	; 108
 2de:	11 f4       	brne	.+4      	; 0x2e4 <vfprintf+0xc6>
 2e0:	20 68       	ori	r18, 0x80	; 128
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <vfprintf+0xca>
 2e4:	88 36       	cpi	r24, 0x68	; 104
 2e6:	41 f4       	brne	.+16     	; 0x2f8 <vfprintf+0xda>
 2e8:	f6 01       	movw	r30, r12
 2ea:	93 fd       	sbrc	r25, 3
 2ec:	85 91       	lpm	r24, Z+
 2ee:	93 ff       	sbrs	r25, 3
 2f0:	81 91       	ld	r24, Z+
 2f2:	6f 01       	movw	r12, r30
 2f4:	81 11       	cpse	r24, r1
 2f6:	c1 cf       	rjmp	.-126    	; 0x27a <vfprintf+0x5c>
 2f8:	98 2f       	mov	r25, r24
 2fa:	9f 7d       	andi	r25, 0xDF	; 223
 2fc:	95 54       	subi	r25, 0x45	; 69
 2fe:	93 30       	cpi	r25, 0x03	; 3
 300:	28 f4       	brcc	.+10     	; 0x30c <vfprintf+0xee>
 302:	0c 5f       	subi	r16, 0xFC	; 252
 304:	1f 4f       	sbci	r17, 0xFF	; 255
 306:	ff e3       	ldi	r31, 0x3F	; 63
 308:	f9 83       	std	Y+1, r31	; 0x01
 30a:	0d c0       	rjmp	.+26     	; 0x326 <vfprintf+0x108>
 30c:	83 36       	cpi	r24, 0x63	; 99
 30e:	31 f0       	breq	.+12     	; 0x31c <vfprintf+0xfe>
 310:	83 37       	cpi	r24, 0x73	; 115
 312:	71 f0       	breq	.+28     	; 0x330 <vfprintf+0x112>
 314:	83 35       	cpi	r24, 0x53	; 83
 316:	09 f0       	breq	.+2      	; 0x31a <vfprintf+0xfc>
 318:	5b c0       	rjmp	.+182    	; 0x3d0 <vfprintf+0x1b2>
 31a:	22 c0       	rjmp	.+68     	; 0x360 <vfprintf+0x142>
 31c:	f8 01       	movw	r30, r16
 31e:	80 81       	ld	r24, Z
 320:	89 83       	std	Y+1, r24	; 0x01
 322:	0e 5f       	subi	r16, 0xFE	; 254
 324:	1f 4f       	sbci	r17, 0xFF	; 255
 326:	44 24       	eor	r4, r4
 328:	43 94       	inc	r4
 32a:	51 2c       	mov	r5, r1
 32c:	54 01       	movw	r10, r8
 32e:	15 c0       	rjmp	.+42     	; 0x35a <vfprintf+0x13c>
 330:	38 01       	movw	r6, r16
 332:	f2 e0       	ldi	r31, 0x02	; 2
 334:	6f 0e       	add	r6, r31
 336:	71 1c       	adc	r7, r1
 338:	f8 01       	movw	r30, r16
 33a:	a0 80       	ld	r10, Z
 33c:	b1 80       	ldd	r11, Z+1	; 0x01
 33e:	26 ff       	sbrs	r18, 6
 340:	03 c0       	rjmp	.+6      	; 0x348 <vfprintf+0x12a>
 342:	65 2d       	mov	r22, r5
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	02 c0       	rjmp	.+4      	; 0x34c <vfprintf+0x12e>
 348:	6f ef       	ldi	r22, 0xFF	; 255
 34a:	7f ef       	ldi	r23, 0xFF	; 255
 34c:	c5 01       	movw	r24, r10
 34e:	2c 87       	std	Y+12, r18	; 0x0c
 350:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <strnlen>
 354:	2c 01       	movw	r4, r24
 356:	83 01       	movw	r16, r6
 358:	2c 85       	ldd	r18, Y+12	; 0x0c
 35a:	2f 77       	andi	r18, 0x7F	; 127
 35c:	22 2e       	mov	r2, r18
 35e:	17 c0       	rjmp	.+46     	; 0x38e <vfprintf+0x170>
 360:	38 01       	movw	r6, r16
 362:	f2 e0       	ldi	r31, 0x02	; 2
 364:	6f 0e       	add	r6, r31
 366:	71 1c       	adc	r7, r1
 368:	f8 01       	movw	r30, r16
 36a:	a0 80       	ld	r10, Z
 36c:	b1 80       	ldd	r11, Z+1	; 0x01
 36e:	26 ff       	sbrs	r18, 6
 370:	03 c0       	rjmp	.+6      	; 0x378 <vfprintf+0x15a>
 372:	65 2d       	mov	r22, r5
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <vfprintf+0x15e>
 378:	6f ef       	ldi	r22, 0xFF	; 255
 37a:	7f ef       	ldi	r23, 0xFF	; 255
 37c:	c5 01       	movw	r24, r10
 37e:	2c 87       	std	Y+12, r18	; 0x0c
 380:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <strnlen_P>
 384:	2c 01       	movw	r4, r24
 386:	2c 85       	ldd	r18, Y+12	; 0x0c
 388:	20 68       	ori	r18, 0x80	; 128
 38a:	22 2e       	mov	r2, r18
 38c:	83 01       	movw	r16, r6
 38e:	23 fc       	sbrc	r2, 3
 390:	1b c0       	rjmp	.+54     	; 0x3c8 <vfprintf+0x1aa>
 392:	83 2d       	mov	r24, r3
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	48 16       	cp	r4, r24
 398:	59 06       	cpc	r5, r25
 39a:	b0 f4       	brcc	.+44     	; 0x3c8 <vfprintf+0x1aa>
 39c:	b7 01       	movw	r22, r14
 39e:	80 e2       	ldi	r24, 0x20	; 32
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 3a6:	3a 94       	dec	r3
 3a8:	f4 cf       	rjmp	.-24     	; 0x392 <vfprintf+0x174>
 3aa:	f5 01       	movw	r30, r10
 3ac:	27 fc       	sbrc	r2, 7
 3ae:	85 91       	lpm	r24, Z+
 3b0:	27 fe       	sbrs	r2, 7
 3b2:	81 91       	ld	r24, Z+
 3b4:	5f 01       	movw	r10, r30
 3b6:	b7 01       	movw	r22, r14
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 3be:	31 10       	cpse	r3, r1
 3c0:	3a 94       	dec	r3
 3c2:	f1 e0       	ldi	r31, 0x01	; 1
 3c4:	4f 1a       	sub	r4, r31
 3c6:	51 08       	sbc	r5, r1
 3c8:	41 14       	cp	r4, r1
 3ca:	51 04       	cpc	r5, r1
 3cc:	71 f7       	brne	.-36     	; 0x3aa <vfprintf+0x18c>
 3ce:	e5 c0       	rjmp	.+458    	; 0x59a <__stack+0x13b>
 3d0:	84 36       	cpi	r24, 0x64	; 100
 3d2:	11 f0       	breq	.+4      	; 0x3d8 <vfprintf+0x1ba>
 3d4:	89 36       	cpi	r24, 0x69	; 105
 3d6:	39 f5       	brne	.+78     	; 0x426 <vfprintf+0x208>
 3d8:	f8 01       	movw	r30, r16
 3da:	27 ff       	sbrs	r18, 7
 3dc:	07 c0       	rjmp	.+14     	; 0x3ec <vfprintf+0x1ce>
 3de:	60 81       	ld	r22, Z
 3e0:	71 81       	ldd	r23, Z+1	; 0x01
 3e2:	82 81       	ldd	r24, Z+2	; 0x02
 3e4:	93 81       	ldd	r25, Z+3	; 0x03
 3e6:	0c 5f       	subi	r16, 0xFC	; 252
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	08 c0       	rjmp	.+16     	; 0x3fc <vfprintf+0x1de>
 3ec:	60 81       	ld	r22, Z
 3ee:	71 81       	ldd	r23, Z+1	; 0x01
 3f0:	88 27       	eor	r24, r24
 3f2:	77 fd       	sbrc	r23, 7
 3f4:	80 95       	com	r24
 3f6:	98 2f       	mov	r25, r24
 3f8:	0e 5f       	subi	r16, 0xFE	; 254
 3fa:	1f 4f       	sbci	r17, 0xFF	; 255
 3fc:	2f 76       	andi	r18, 0x6F	; 111
 3fe:	b2 2e       	mov	r11, r18
 400:	97 ff       	sbrs	r25, 7
 402:	09 c0       	rjmp	.+18     	; 0x416 <vfprintf+0x1f8>
 404:	90 95       	com	r25
 406:	80 95       	com	r24
 408:	70 95       	com	r23
 40a:	61 95       	neg	r22
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	8f 4f       	sbci	r24, 0xFF	; 255
 410:	9f 4f       	sbci	r25, 0xFF	; 255
 412:	20 68       	ori	r18, 0x80	; 128
 414:	b2 2e       	mov	r11, r18
 416:	2a e0       	ldi	r18, 0x0A	; 10
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	a4 01       	movw	r20, r8
 41c:	0e 94 29 03 	call	0x652	; 0x652 <__ultoa_invert>
 420:	a8 2e       	mov	r10, r24
 422:	a8 18       	sub	r10, r8
 424:	44 c0       	rjmp	.+136    	; 0x4ae <__stack+0x4f>
 426:	85 37       	cpi	r24, 0x75	; 117
 428:	29 f4       	brne	.+10     	; 0x434 <vfprintf+0x216>
 42a:	2f 7e       	andi	r18, 0xEF	; 239
 42c:	b2 2e       	mov	r11, r18
 42e:	2a e0       	ldi	r18, 0x0A	; 10
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	25 c0       	rjmp	.+74     	; 0x47e <__stack+0x1f>
 434:	f2 2f       	mov	r31, r18
 436:	f9 7f       	andi	r31, 0xF9	; 249
 438:	bf 2e       	mov	r11, r31
 43a:	8f 36       	cpi	r24, 0x6F	; 111
 43c:	c1 f0       	breq	.+48     	; 0x46e <__stack+0xf>
 43e:	18 f4       	brcc	.+6      	; 0x446 <vfprintf+0x228>
 440:	88 35       	cpi	r24, 0x58	; 88
 442:	79 f0       	breq	.+30     	; 0x462 <__stack+0x3>
 444:	b4 c0       	rjmp	.+360    	; 0x5ae <__stack+0x14f>
 446:	80 37       	cpi	r24, 0x70	; 112
 448:	19 f0       	breq	.+6      	; 0x450 <vfprintf+0x232>
 44a:	88 37       	cpi	r24, 0x78	; 120
 44c:	21 f0       	breq	.+8      	; 0x456 <vfprintf+0x238>
 44e:	af c0       	rjmp	.+350    	; 0x5ae <__stack+0x14f>
 450:	2f 2f       	mov	r18, r31
 452:	20 61       	ori	r18, 0x10	; 16
 454:	b2 2e       	mov	r11, r18
 456:	b4 fe       	sbrs	r11, 4
 458:	0d c0       	rjmp	.+26     	; 0x474 <__stack+0x15>
 45a:	8b 2d       	mov	r24, r11
 45c:	84 60       	ori	r24, 0x04	; 4
 45e:	b8 2e       	mov	r11, r24
 460:	09 c0       	rjmp	.+18     	; 0x474 <__stack+0x15>
 462:	24 ff       	sbrs	r18, 4
 464:	0a c0       	rjmp	.+20     	; 0x47a <__stack+0x1b>
 466:	9f 2f       	mov	r25, r31
 468:	96 60       	ori	r25, 0x06	; 6
 46a:	b9 2e       	mov	r11, r25
 46c:	06 c0       	rjmp	.+12     	; 0x47a <__stack+0x1b>
 46e:	28 e0       	ldi	r18, 0x08	; 8
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	05 c0       	rjmp	.+10     	; 0x47e <__stack+0x1f>
 474:	20 e1       	ldi	r18, 0x10	; 16
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	02 c0       	rjmp	.+4      	; 0x47e <__stack+0x1f>
 47a:	20 e1       	ldi	r18, 0x10	; 16
 47c:	32 e0       	ldi	r19, 0x02	; 2
 47e:	f8 01       	movw	r30, r16
 480:	b7 fe       	sbrs	r11, 7
 482:	07 c0       	rjmp	.+14     	; 0x492 <__stack+0x33>
 484:	60 81       	ld	r22, Z
 486:	71 81       	ldd	r23, Z+1	; 0x01
 488:	82 81       	ldd	r24, Z+2	; 0x02
 48a:	93 81       	ldd	r25, Z+3	; 0x03
 48c:	0c 5f       	subi	r16, 0xFC	; 252
 48e:	1f 4f       	sbci	r17, 0xFF	; 255
 490:	06 c0       	rjmp	.+12     	; 0x49e <__stack+0x3f>
 492:	60 81       	ld	r22, Z
 494:	71 81       	ldd	r23, Z+1	; 0x01
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	0e 5f       	subi	r16, 0xFE	; 254
 49c:	1f 4f       	sbci	r17, 0xFF	; 255
 49e:	a4 01       	movw	r20, r8
 4a0:	0e 94 29 03 	call	0x652	; 0x652 <__ultoa_invert>
 4a4:	a8 2e       	mov	r10, r24
 4a6:	a8 18       	sub	r10, r8
 4a8:	fb 2d       	mov	r31, r11
 4aa:	ff 77       	andi	r31, 0x7F	; 127
 4ac:	bf 2e       	mov	r11, r31
 4ae:	b6 fe       	sbrs	r11, 6
 4b0:	0b c0       	rjmp	.+22     	; 0x4c8 <__stack+0x69>
 4b2:	2b 2d       	mov	r18, r11
 4b4:	2e 7f       	andi	r18, 0xFE	; 254
 4b6:	a5 14       	cp	r10, r5
 4b8:	50 f4       	brcc	.+20     	; 0x4ce <__stack+0x6f>
 4ba:	b4 fe       	sbrs	r11, 4
 4bc:	0a c0       	rjmp	.+20     	; 0x4d2 <__stack+0x73>
 4be:	b2 fc       	sbrc	r11, 2
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <__stack+0x73>
 4c2:	2b 2d       	mov	r18, r11
 4c4:	2e 7e       	andi	r18, 0xEE	; 238
 4c6:	05 c0       	rjmp	.+10     	; 0x4d2 <__stack+0x73>
 4c8:	7a 2c       	mov	r7, r10
 4ca:	2b 2d       	mov	r18, r11
 4cc:	03 c0       	rjmp	.+6      	; 0x4d4 <__stack+0x75>
 4ce:	7a 2c       	mov	r7, r10
 4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <__stack+0x75>
 4d2:	75 2c       	mov	r7, r5
 4d4:	24 ff       	sbrs	r18, 4
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <__stack+0x93>
 4d8:	fe 01       	movw	r30, r28
 4da:	ea 0d       	add	r30, r10
 4dc:	f1 1d       	adc	r31, r1
 4de:	80 81       	ld	r24, Z
 4e0:	80 33       	cpi	r24, 0x30	; 48
 4e2:	11 f4       	brne	.+4      	; 0x4e8 <__stack+0x89>
 4e4:	29 7e       	andi	r18, 0xE9	; 233
 4e6:	09 c0       	rjmp	.+18     	; 0x4fa <__stack+0x9b>
 4e8:	22 ff       	sbrs	r18, 2
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <__stack+0x99>
 4ec:	73 94       	inc	r7
 4ee:	73 94       	inc	r7
 4f0:	04 c0       	rjmp	.+8      	; 0x4fa <__stack+0x9b>
 4f2:	82 2f       	mov	r24, r18
 4f4:	86 78       	andi	r24, 0x86	; 134
 4f6:	09 f0       	breq	.+2      	; 0x4fa <__stack+0x9b>
 4f8:	73 94       	inc	r7
 4fa:	23 fd       	sbrc	r18, 3
 4fc:	13 c0       	rjmp	.+38     	; 0x524 <__stack+0xc5>
 4fe:	20 ff       	sbrs	r18, 0
 500:	06 c0       	rjmp	.+12     	; 0x50e <__stack+0xaf>
 502:	5a 2c       	mov	r5, r10
 504:	73 14       	cp	r7, r3
 506:	18 f4       	brcc	.+6      	; 0x50e <__stack+0xaf>
 508:	53 0c       	add	r5, r3
 50a:	57 18       	sub	r5, r7
 50c:	73 2c       	mov	r7, r3
 50e:	73 14       	cp	r7, r3
 510:	68 f4       	brcc	.+26     	; 0x52c <__stack+0xcd>
 512:	b7 01       	movw	r22, r14
 514:	80 e2       	ldi	r24, 0x20	; 32
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	2c 87       	std	Y+12, r18	; 0x0c
 51a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 51e:	73 94       	inc	r7
 520:	2c 85       	ldd	r18, Y+12	; 0x0c
 522:	f5 cf       	rjmp	.-22     	; 0x50e <__stack+0xaf>
 524:	73 14       	cp	r7, r3
 526:	10 f4       	brcc	.+4      	; 0x52c <__stack+0xcd>
 528:	37 18       	sub	r3, r7
 52a:	01 c0       	rjmp	.+2      	; 0x52e <__stack+0xcf>
 52c:	31 2c       	mov	r3, r1
 52e:	24 ff       	sbrs	r18, 4
 530:	12 c0       	rjmp	.+36     	; 0x556 <__stack+0xf7>
 532:	b7 01       	movw	r22, r14
 534:	80 e3       	ldi	r24, 0x30	; 48
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	2c 87       	std	Y+12, r18	; 0x0c
 53a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 53e:	2c 85       	ldd	r18, Y+12	; 0x0c
 540:	22 ff       	sbrs	r18, 2
 542:	17 c0       	rjmp	.+46     	; 0x572 <__stack+0x113>
 544:	21 ff       	sbrs	r18, 1
 546:	03 c0       	rjmp	.+6      	; 0x54e <__stack+0xef>
 548:	88 e5       	ldi	r24, 0x58	; 88
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__stack+0xf3>
 54e:	88 e7       	ldi	r24, 0x78	; 120
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	b7 01       	movw	r22, r14
 554:	0c c0       	rjmp	.+24     	; 0x56e <__stack+0x10f>
 556:	82 2f       	mov	r24, r18
 558:	86 78       	andi	r24, 0x86	; 134
 55a:	59 f0       	breq	.+22     	; 0x572 <__stack+0x113>
 55c:	21 fd       	sbrc	r18, 1
 55e:	02 c0       	rjmp	.+4      	; 0x564 <__stack+0x105>
 560:	80 e2       	ldi	r24, 0x20	; 32
 562:	01 c0       	rjmp	.+2      	; 0x566 <__stack+0x107>
 564:	8b e2       	ldi	r24, 0x2B	; 43
 566:	27 fd       	sbrc	r18, 7
 568:	8d e2       	ldi	r24, 0x2D	; 45
 56a:	b7 01       	movw	r22, r14
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 572:	a5 14       	cp	r10, r5
 574:	38 f4       	brcc	.+14     	; 0x584 <__stack+0x125>
 576:	b7 01       	movw	r22, r14
 578:	80 e3       	ldi	r24, 0x30	; 48
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 580:	5a 94       	dec	r5
 582:	f7 cf       	rjmp	.-18     	; 0x572 <__stack+0x113>
 584:	aa 94       	dec	r10
 586:	f4 01       	movw	r30, r8
 588:	ea 0d       	add	r30, r10
 58a:	f1 1d       	adc	r31, r1
 58c:	80 81       	ld	r24, Z
 58e:	b7 01       	movw	r22, r14
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 596:	a1 10       	cpse	r10, r1
 598:	f5 cf       	rjmp	.-22     	; 0x584 <__stack+0x125>
 59a:	33 20       	and	r3, r3
 59c:	09 f4       	brne	.+2      	; 0x5a0 <__stack+0x141>
 59e:	51 ce       	rjmp	.-862    	; 0x242 <vfprintf+0x24>
 5a0:	b7 01       	movw	r22, r14
 5a2:	80 e2       	ldi	r24, 0x20	; 32
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <fputc>
 5aa:	3a 94       	dec	r3
 5ac:	f6 cf       	rjmp	.-20     	; 0x59a <__stack+0x13b>
 5ae:	f7 01       	movw	r30, r14
 5b0:	86 81       	ldd	r24, Z+6	; 0x06
 5b2:	97 81       	ldd	r25, Z+7	; 0x07
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__stack+0x15b>
 5b6:	8f ef       	ldi	r24, 0xFF	; 255
 5b8:	9f ef       	ldi	r25, 0xFF	; 255
 5ba:	2c 96       	adiw	r28, 0x0c	; 12
 5bc:	e2 e1       	ldi	r30, 0x12	; 18
 5be:	0c 94 a3 03 	jmp	0x746	; 0x746 <__epilogue_restores__>

000005c2 <strnlen_P>:
 5c2:	fc 01       	movw	r30, r24
 5c4:	05 90       	lpm	r0, Z+
 5c6:	61 50       	subi	r22, 0x01	; 1
 5c8:	70 40       	sbci	r23, 0x00	; 0
 5ca:	01 10       	cpse	r0, r1
 5cc:	d8 f7       	brcc	.-10     	; 0x5c4 <strnlen_P+0x2>
 5ce:	80 95       	com	r24
 5d0:	90 95       	com	r25
 5d2:	8e 0f       	add	r24, r30
 5d4:	9f 1f       	adc	r25, r31
 5d6:	08 95       	ret

000005d8 <strnlen>:
 5d8:	fc 01       	movw	r30, r24
 5da:	61 50       	subi	r22, 0x01	; 1
 5dc:	70 40       	sbci	r23, 0x00	; 0
 5de:	01 90       	ld	r0, Z+
 5e0:	01 10       	cpse	r0, r1
 5e2:	d8 f7       	brcc	.-10     	; 0x5da <strnlen+0x2>
 5e4:	80 95       	com	r24
 5e6:	90 95       	com	r25
 5e8:	8e 0f       	add	r24, r30
 5ea:	9f 1f       	adc	r25, r31
 5ec:	08 95       	ret

000005ee <fputc>:
 5ee:	0f 93       	push	r16
 5f0:	1f 93       	push	r17
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	18 2f       	mov	r17, r24
 5f8:	09 2f       	mov	r16, r25
 5fa:	eb 01       	movw	r28, r22
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
 5fe:	81 fd       	sbrc	r24, 1
 600:	03 c0       	rjmp	.+6      	; 0x608 <fputc+0x1a>
 602:	8f ef       	ldi	r24, 0xFF	; 255
 604:	9f ef       	ldi	r25, 0xFF	; 255
 606:	20 c0       	rjmp	.+64     	; 0x648 <fputc+0x5a>
 608:	82 ff       	sbrs	r24, 2
 60a:	10 c0       	rjmp	.+32     	; 0x62c <fputc+0x3e>
 60c:	4e 81       	ldd	r20, Y+6	; 0x06
 60e:	5f 81       	ldd	r21, Y+7	; 0x07
 610:	2c 81       	ldd	r18, Y+4	; 0x04
 612:	3d 81       	ldd	r19, Y+5	; 0x05
 614:	42 17       	cp	r20, r18
 616:	53 07       	cpc	r21, r19
 618:	7c f4       	brge	.+30     	; 0x638 <fputc+0x4a>
 61a:	e8 81       	ld	r30, Y
 61c:	f9 81       	ldd	r31, Y+1	; 0x01
 61e:	9f 01       	movw	r18, r30
 620:	2f 5f       	subi	r18, 0xFF	; 255
 622:	3f 4f       	sbci	r19, 0xFF	; 255
 624:	39 83       	std	Y+1, r19	; 0x01
 626:	28 83       	st	Y, r18
 628:	10 83       	st	Z, r17
 62a:	06 c0       	rjmp	.+12     	; 0x638 <fputc+0x4a>
 62c:	e8 85       	ldd	r30, Y+8	; 0x08
 62e:	f9 85       	ldd	r31, Y+9	; 0x09
 630:	81 2f       	mov	r24, r17
 632:	09 95       	icall
 634:	89 2b       	or	r24, r25
 636:	29 f7       	brne	.-54     	; 0x602 <fputc+0x14>
 638:	2e 81       	ldd	r18, Y+6	; 0x06
 63a:	3f 81       	ldd	r19, Y+7	; 0x07
 63c:	2f 5f       	subi	r18, 0xFF	; 255
 63e:	3f 4f       	sbci	r19, 0xFF	; 255
 640:	3f 83       	std	Y+7, r19	; 0x07
 642:	2e 83       	std	Y+6, r18	; 0x06
 644:	81 2f       	mov	r24, r17
 646:	90 2f       	mov	r25, r16
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	1f 91       	pop	r17
 64e:	0f 91       	pop	r16
 650:	08 95       	ret

00000652 <__ultoa_invert>:
 652:	fa 01       	movw	r30, r20
 654:	aa 27       	eor	r26, r26
 656:	28 30       	cpi	r18, 0x08	; 8
 658:	51 f1       	breq	.+84     	; 0x6ae <__ultoa_invert+0x5c>
 65a:	20 31       	cpi	r18, 0x10	; 16
 65c:	81 f1       	breq	.+96     	; 0x6be <__ultoa_invert+0x6c>
 65e:	e8 94       	clt
 660:	6f 93       	push	r22
 662:	6e 7f       	andi	r22, 0xFE	; 254
 664:	6e 5f       	subi	r22, 0xFE	; 254
 666:	7f 4f       	sbci	r23, 0xFF	; 255
 668:	8f 4f       	sbci	r24, 0xFF	; 255
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	af 4f       	sbci	r26, 0xFF	; 255
 66e:	b1 e0       	ldi	r27, 0x01	; 1
 670:	3e d0       	rcall	.+124    	; 0x6ee <__ultoa_invert+0x9c>
 672:	b4 e0       	ldi	r27, 0x04	; 4
 674:	3c d0       	rcall	.+120    	; 0x6ee <__ultoa_invert+0x9c>
 676:	67 0f       	add	r22, r23
 678:	78 1f       	adc	r23, r24
 67a:	89 1f       	adc	r24, r25
 67c:	9a 1f       	adc	r25, r26
 67e:	a1 1d       	adc	r26, r1
 680:	68 0f       	add	r22, r24
 682:	79 1f       	adc	r23, r25
 684:	8a 1f       	adc	r24, r26
 686:	91 1d       	adc	r25, r1
 688:	a1 1d       	adc	r26, r1
 68a:	6a 0f       	add	r22, r26
 68c:	71 1d       	adc	r23, r1
 68e:	81 1d       	adc	r24, r1
 690:	91 1d       	adc	r25, r1
 692:	a1 1d       	adc	r26, r1
 694:	20 d0       	rcall	.+64     	; 0x6d6 <__ultoa_invert+0x84>
 696:	09 f4       	brne	.+2      	; 0x69a <__ultoa_invert+0x48>
 698:	68 94       	set
 69a:	3f 91       	pop	r19
 69c:	2a e0       	ldi	r18, 0x0A	; 10
 69e:	26 9f       	mul	r18, r22
 6a0:	11 24       	eor	r1, r1
 6a2:	30 19       	sub	r19, r0
 6a4:	30 5d       	subi	r19, 0xD0	; 208
 6a6:	31 93       	st	Z+, r19
 6a8:	de f6       	brtc	.-74     	; 0x660 <__ultoa_invert+0xe>
 6aa:	cf 01       	movw	r24, r30
 6ac:	08 95       	ret
 6ae:	46 2f       	mov	r20, r22
 6b0:	47 70       	andi	r20, 0x07	; 7
 6b2:	40 5d       	subi	r20, 0xD0	; 208
 6b4:	41 93       	st	Z+, r20
 6b6:	b3 e0       	ldi	r27, 0x03	; 3
 6b8:	0f d0       	rcall	.+30     	; 0x6d8 <__ultoa_invert+0x86>
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__ultoa_invert+0x5c>
 6bc:	f6 cf       	rjmp	.-20     	; 0x6aa <__ultoa_invert+0x58>
 6be:	46 2f       	mov	r20, r22
 6c0:	4f 70       	andi	r20, 0x0F	; 15
 6c2:	40 5d       	subi	r20, 0xD0	; 208
 6c4:	4a 33       	cpi	r20, 0x3A	; 58
 6c6:	18 f0       	brcs	.+6      	; 0x6ce <__ultoa_invert+0x7c>
 6c8:	49 5d       	subi	r20, 0xD9	; 217
 6ca:	31 fd       	sbrc	r19, 1
 6cc:	40 52       	subi	r20, 0x20	; 32
 6ce:	41 93       	st	Z+, r20
 6d0:	02 d0       	rcall	.+4      	; 0x6d6 <__ultoa_invert+0x84>
 6d2:	a9 f7       	brne	.-22     	; 0x6be <__ultoa_invert+0x6c>
 6d4:	ea cf       	rjmp	.-44     	; 0x6aa <__ultoa_invert+0x58>
 6d6:	b4 e0       	ldi	r27, 0x04	; 4
 6d8:	a6 95       	lsr	r26
 6da:	97 95       	ror	r25
 6dc:	87 95       	ror	r24
 6de:	77 95       	ror	r23
 6e0:	67 95       	ror	r22
 6e2:	ba 95       	dec	r27
 6e4:	c9 f7       	brne	.-14     	; 0x6d8 <__ultoa_invert+0x86>
 6e6:	00 97       	sbiw	r24, 0x00	; 0
 6e8:	61 05       	cpc	r22, r1
 6ea:	71 05       	cpc	r23, r1
 6ec:	08 95       	ret
 6ee:	9b 01       	movw	r18, r22
 6f0:	ac 01       	movw	r20, r24
 6f2:	0a 2e       	mov	r0, r26
 6f4:	06 94       	lsr	r0
 6f6:	57 95       	ror	r21
 6f8:	47 95       	ror	r20
 6fa:	37 95       	ror	r19
 6fc:	27 95       	ror	r18
 6fe:	ba 95       	dec	r27
 700:	c9 f7       	brne	.-14     	; 0x6f4 <__ultoa_invert+0xa2>
 702:	62 0f       	add	r22, r18
 704:	73 1f       	adc	r23, r19
 706:	84 1f       	adc	r24, r20
 708:	95 1f       	adc	r25, r21
 70a:	a0 1d       	adc	r26, r0
 70c:	08 95       	ret

0000070e <__prologue_saves__>:
 70e:	2f 92       	push	r2
 710:	3f 92       	push	r3
 712:	4f 92       	push	r4
 714:	5f 92       	push	r5
 716:	6f 92       	push	r6
 718:	7f 92       	push	r7
 71a:	8f 92       	push	r8
 71c:	9f 92       	push	r9
 71e:	af 92       	push	r10
 720:	bf 92       	push	r11
 722:	cf 92       	push	r12
 724:	df 92       	push	r13
 726:	ef 92       	push	r14
 728:	ff 92       	push	r15
 72a:	0f 93       	push	r16
 72c:	1f 93       	push	r17
 72e:	cf 93       	push	r28
 730:	df 93       	push	r29
 732:	cd b7       	in	r28, 0x3d	; 61
 734:	de b7       	in	r29, 0x3e	; 62
 736:	ca 1b       	sub	r28, r26
 738:	db 0b       	sbc	r29, r27
 73a:	0f b6       	in	r0, 0x3f	; 63
 73c:	f8 94       	cli
 73e:	de bf       	out	0x3e, r29	; 62
 740:	0f be       	out	0x3f, r0	; 63
 742:	cd bf       	out	0x3d, r28	; 61
 744:	09 94       	ijmp

00000746 <__epilogue_restores__>:
 746:	2a 88       	ldd	r2, Y+18	; 0x12
 748:	39 88       	ldd	r3, Y+17	; 0x11
 74a:	48 88       	ldd	r4, Y+16	; 0x10
 74c:	5f 84       	ldd	r5, Y+15	; 0x0f
 74e:	6e 84       	ldd	r6, Y+14	; 0x0e
 750:	7d 84       	ldd	r7, Y+13	; 0x0d
 752:	8c 84       	ldd	r8, Y+12	; 0x0c
 754:	9b 84       	ldd	r9, Y+11	; 0x0b
 756:	aa 84       	ldd	r10, Y+10	; 0x0a
 758:	b9 84       	ldd	r11, Y+9	; 0x09
 75a:	c8 84       	ldd	r12, Y+8	; 0x08
 75c:	df 80       	ldd	r13, Y+7	; 0x07
 75e:	ee 80       	ldd	r14, Y+6	; 0x06
 760:	fd 80       	ldd	r15, Y+5	; 0x05
 762:	0c 81       	ldd	r16, Y+4	; 0x04
 764:	1b 81       	ldd	r17, Y+3	; 0x03
 766:	aa 81       	ldd	r26, Y+2	; 0x02
 768:	b9 81       	ldd	r27, Y+1	; 0x01
 76a:	ce 0f       	add	r28, r30
 76c:	d1 1d       	adc	r29, r1
 76e:	0f b6       	in	r0, 0x3f	; 63
 770:	f8 94       	cli
 772:	de bf       	out	0x3e, r29	; 62
 774:	0f be       	out	0x3f, r0	; 63
 776:	cd bf       	out	0x3d, r28	; 61
 778:	ed 01       	movw	r28, r26
 77a:	08 95       	ret

0000077c <_exit>:
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
