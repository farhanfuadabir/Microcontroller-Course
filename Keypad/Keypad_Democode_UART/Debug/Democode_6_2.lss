
Democode_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000332  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000386  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000068  00000000  00000000  000003b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000008aa  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000029f  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000439  00000000  00000000  00000f67  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  000000c0  00000000  00000000  000013a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000207  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000076f  00000000  00000000  00001667  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000060  00000000  00000000  00001dd6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 e3       	ldi	r30, 0x32	; 50
  3a:	f3 e0       	ldi	r31, 0x03	; 3
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	02 d0       	rcall	.+4      	; 0x4e <main>
  4a:	71 c1       	rjmp	.+738    	; 0x32e <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <main>:
#define WAIT 20


int main(void)
{
	DDRB  = 0b00001111; //Bit 0-3 is OUTPUT, Bit 4-7 is INPUT
  4e:	8f e0       	ldi	r24, 0x0F	; 15
  50:	87 bb       	out	0x17, r24	; 23
	PORTB = 0b11111111; //Bit 0-3 is SET, Bit 4-7 is PULLED UP
  52:	8f ef       	ldi	r24, 0xFF	; 255
  54:	88 bb       	out	0x18, r24	; 24
	
	USART_Init();
  56:	5f d1       	rcall	.+702    	; 0x316 <USART_Init>
	
	while(1)
	{
		for(unsigned char i = 0; i < 4; i++)
  58:	10 e0       	ldi	r17, 0x00	; 0
		{
			_delay_ms(WAIT);
			PORTB = ~(1 << i);
  5a:	c1 e0       	ldi	r28, 0x01	; 1
  5c:	d0 e0       	ldi	r29, 0x00	; 0
	
	USART_Init();
	
	while(1)
	{
		for(unsigned char i = 0; i < 4; i++)
  5e:	00 e0       	ldi	r16, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  60:	8f e3       	ldi	r24, 0x3F	; 63
  62:	9c e9       	ldi	r25, 0x9C	; 156
  64:	01 97       	sbiw	r24, 0x01	; 1
  66:	f1 f7       	brne	.-4      	; 0x64 <main+0x16>
  68:	00 c0       	rjmp	.+0      	; 0x6a <main+0x1c>
  6a:	00 00       	nop
		{
			_delay_ms(WAIT);
			PORTB = ~(1 << i);
  6c:	ce 01       	movw	r24, r28
  6e:	01 2e       	mov	r0, r17
  70:	02 c0       	rjmp	.+4      	; 0x76 <main+0x28>
  72:	88 0f       	add	r24, r24
  74:	99 1f       	adc	r25, r25
  76:	0a 94       	dec	r0
  78:	e2 f7       	brpl	.-8      	; 0x72 <main+0x24>
  7a:	80 95       	com	r24
  7c:	88 bb       	out	0x18, r24	; 24
  7e:	8f e3       	ldi	r24, 0x3F	; 63
  80:	9c e9       	ldi	r25, 0x9C	; 156
  82:	01 97       	sbiw	r24, 0x01	; 1
  84:	f1 f7       	brne	.-4      	; 0x82 <main+0x34>
  86:	00 c0       	rjmp	.+0      	; 0x88 <main+0x3a>
  88:	00 00       	nop
			_delay_ms(WAIT);
			
			//------------------------------------------------------
			if(((PINB & 0b00000001) == 0) && ((PINB & 0b10000000) == 0))
  8a:	b0 99       	sbic	0x16, 0	; 22
  8c:	12 c0       	rjmp	.+36     	; 0xb2 <main+0x64>
  8e:	b7 99       	sbic	0x16, 7	; 22
  90:	10 c0       	rjmp	.+32     	; 0xb2 <main+0x64>
			{
				transmitByte('1');
  92:	81 e3       	ldi	r24, 0x31	; 49
  94:	48 d1       	rcall	.+656    	; 0x326 <transmitByte>
				while(((PINB & 0b00000001) == 0) && ((PINB & 0b10000000) == 0))
  96:	b0 99       	sbic	0x16, 0	; 22
  98:	0c c0       	rjmp	.+24     	; 0xb2 <main+0x64>
  9a:	b7 99       	sbic	0x16, 7	; 22
  9c:	0a c0       	rjmp	.+20     	; 0xb2 <main+0x64>
  9e:	8f e3       	ldi	r24, 0x3F	; 63
  a0:	9c e9       	ldi	r25, 0x9C	; 156
  a2:	01 97       	sbiw	r24, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <main+0x54>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <main+0x5a>
  a8:	00 00       	nop
  aa:	b0 99       	sbic	0x16, 0	; 22
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <main+0x64>
  ae:	b7 9b       	sbis	0x16, 7	; 22
  b0:	f6 cf       	rjmp	.-20     	; 0x9e <main+0x50>
					_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x01)) && (!(PINB & 0x40)))
  b2:	b0 99       	sbic	0x16, 0	; 22
  b4:	12 c0       	rjmp	.+36     	; 0xda <main+0x8c>
  b6:	b6 99       	sbic	0x16, 6	; 22
  b8:	10 c0       	rjmp	.+32     	; 0xda <main+0x8c>
			{
				transmitByte('2');
  ba:	82 e3       	ldi	r24, 0x32	; 50
  bc:	34 d1       	rcall	.+616    	; 0x326 <transmitByte>
				while((!(PINB & 0x01)) && (!(PINB & 0x40)))
  be:	b0 99       	sbic	0x16, 0	; 22
  c0:	0c c0       	rjmp	.+24     	; 0xda <main+0x8c>
  c2:	b6 99       	sbic	0x16, 6	; 22
  c4:	0a c0       	rjmp	.+20     	; 0xda <main+0x8c>
  c6:	8f e3       	ldi	r24, 0x3F	; 63
  c8:	9c e9       	ldi	r25, 0x9C	; 156
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x7c>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x82>
  d0:	00 00       	nop
  d2:	b0 99       	sbic	0x16, 0	; 22
  d4:	02 c0       	rjmp	.+4      	; 0xda <main+0x8c>
  d6:	b6 9b       	sbis	0x16, 6	; 22
  d8:	f6 cf       	rjmp	.-20     	; 0xc6 <main+0x78>
				_delay_ms(WAIT);				
			}
			//------------------------------------------------------
			if((!(PINB & 0x01)) && (!(PINB & 0x20)))
  da:	b0 99       	sbic	0x16, 0	; 22
  dc:	12 c0       	rjmp	.+36     	; 0x102 <main+0xb4>
  de:	b5 99       	sbic	0x16, 5	; 22
  e0:	10 c0       	rjmp	.+32     	; 0x102 <main+0xb4>
			{
				transmitByte('3');
  e2:	83 e3       	ldi	r24, 0x33	; 51
  e4:	20 d1       	rcall	.+576    	; 0x326 <transmitByte>
				while((!(PINB & 0x01)) && (!(PINB & 0x20)))
  e6:	b0 99       	sbic	0x16, 0	; 22
  e8:	0c c0       	rjmp	.+24     	; 0x102 <main+0xb4>
  ea:	b5 99       	sbic	0x16, 5	; 22
  ec:	0a c0       	rjmp	.+20     	; 0x102 <main+0xb4>
  ee:	8f e3       	ldi	r24, 0x3F	; 63
  f0:	9c e9       	ldi	r25, 0x9C	; 156
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0xa4>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0xaa>
  f8:	00 00       	nop
  fa:	b0 99       	sbic	0x16, 0	; 22
  fc:	02 c0       	rjmp	.+4      	; 0x102 <main+0xb4>
  fe:	b5 9b       	sbis	0x16, 5	; 22
 100:	f6 cf       	rjmp	.-20     	; 0xee <main+0xa0>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x01)) && (!(PINB & 0x10)))
 102:	b0 99       	sbic	0x16, 0	; 22
 104:	12 c0       	rjmp	.+36     	; 0x12a <main+0xdc>
 106:	b4 99       	sbic	0x16, 4	; 22
 108:	10 c0       	rjmp	.+32     	; 0x12a <main+0xdc>
			{
				transmitByte('A');
 10a:	81 e4       	ldi	r24, 0x41	; 65
 10c:	0c d1       	rcall	.+536    	; 0x326 <transmitByte>
				while((!(PINB & 0x01)) && (!(PINB & 0x10)))
 10e:	b0 99       	sbic	0x16, 0	; 22
 110:	0c c0       	rjmp	.+24     	; 0x12a <main+0xdc>
 112:	b4 99       	sbic	0x16, 4	; 22
 114:	0a c0       	rjmp	.+20     	; 0x12a <main+0xdc>
 116:	8f e3       	ldi	r24, 0x3F	; 63
 118:	9c e9       	ldi	r25, 0x9C	; 156
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <main+0xcc>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0xd2>
 120:	00 00       	nop
 122:	b0 99       	sbic	0x16, 0	; 22
 124:	02 c0       	rjmp	.+4      	; 0x12a <main+0xdc>
 126:	b4 9b       	sbis	0x16, 4	; 22
 128:	f6 cf       	rjmp	.-20     	; 0x116 <main+0xc8>
				_delay_ms(WAIT);
			}
			//======================================================
			if((!(PINB & 0x02)) && (!(PINB & 0x80)))
 12a:	b1 99       	sbic	0x16, 1	; 22
 12c:	12 c0       	rjmp	.+36     	; 0x152 <main+0x104>
 12e:	b7 99       	sbic	0x16, 7	; 22
 130:	10 c0       	rjmp	.+32     	; 0x152 <main+0x104>
			{
				transmitByte('4');
 132:	84 e3       	ldi	r24, 0x34	; 52
 134:	f8 d0       	rcall	.+496    	; 0x326 <transmitByte>
				while((!(PINB & 0x02)) && (!(PINB & 0x80)))
 136:	b1 99       	sbic	0x16, 1	; 22
 138:	0c c0       	rjmp	.+24     	; 0x152 <main+0x104>
 13a:	b7 99       	sbic	0x16, 7	; 22
 13c:	0a c0       	rjmp	.+20     	; 0x152 <main+0x104>
 13e:	8f e3       	ldi	r24, 0x3F	; 63
 140:	9c e9       	ldi	r25, 0x9C	; 156
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0xf4>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0xfa>
 148:	00 00       	nop
 14a:	b1 99       	sbic	0x16, 1	; 22
 14c:	02 c0       	rjmp	.+4      	; 0x152 <main+0x104>
 14e:	b7 9b       	sbis	0x16, 7	; 22
 150:	f6 cf       	rjmp	.-20     	; 0x13e <main+0xf0>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x02)) && (!(PINB & 0x40)))
 152:	b1 99       	sbic	0x16, 1	; 22
 154:	12 c0       	rjmp	.+36     	; 0x17a <main+0x12c>
 156:	b6 99       	sbic	0x16, 6	; 22
 158:	10 c0       	rjmp	.+32     	; 0x17a <main+0x12c>
			{
				transmitByte('5');
 15a:	85 e3       	ldi	r24, 0x35	; 53
 15c:	e4 d0       	rcall	.+456    	; 0x326 <transmitByte>
				while((!(PINB & 0x02)) && (!(PINB & 0x40)))
 15e:	b1 99       	sbic	0x16, 1	; 22
 160:	0c c0       	rjmp	.+24     	; 0x17a <main+0x12c>
 162:	b6 99       	sbic	0x16, 6	; 22
 164:	0a c0       	rjmp	.+20     	; 0x17a <main+0x12c>
 166:	8f e3       	ldi	r24, 0x3F	; 63
 168:	9c e9       	ldi	r25, 0x9C	; 156
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <main+0x11c>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0x122>
 170:	00 00       	nop
 172:	b1 99       	sbic	0x16, 1	; 22
 174:	02 c0       	rjmp	.+4      	; 0x17a <main+0x12c>
 176:	b6 9b       	sbis	0x16, 6	; 22
 178:	f6 cf       	rjmp	.-20     	; 0x166 <main+0x118>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x02)) && (!(PINB & 0x20)))
 17a:	b1 99       	sbic	0x16, 1	; 22
 17c:	12 c0       	rjmp	.+36     	; 0x1a2 <main+0x154>
 17e:	b5 99       	sbic	0x16, 5	; 22
 180:	10 c0       	rjmp	.+32     	; 0x1a2 <main+0x154>
			{
				transmitByte('6');
 182:	86 e3       	ldi	r24, 0x36	; 54
 184:	d0 d0       	rcall	.+416    	; 0x326 <transmitByte>
				while((!(PINB & 0x02)) && (!(PINB & 0x20)))
 186:	b1 99       	sbic	0x16, 1	; 22
 188:	0c c0       	rjmp	.+24     	; 0x1a2 <main+0x154>
 18a:	b5 99       	sbic	0x16, 5	; 22
 18c:	0a c0       	rjmp	.+20     	; 0x1a2 <main+0x154>
 18e:	8f e3       	ldi	r24, 0x3F	; 63
 190:	9c e9       	ldi	r25, 0x9C	; 156
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <main+0x144>
 196:	00 c0       	rjmp	.+0      	; 0x198 <main+0x14a>
 198:	00 00       	nop
 19a:	b1 99       	sbic	0x16, 1	; 22
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <main+0x154>
 19e:	b5 9b       	sbis	0x16, 5	; 22
 1a0:	f6 cf       	rjmp	.-20     	; 0x18e <main+0x140>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x02)) && (!(PINB & 0x10)))
 1a2:	b1 99       	sbic	0x16, 1	; 22
 1a4:	12 c0       	rjmp	.+36     	; 0x1ca <main+0x17c>
 1a6:	b4 99       	sbic	0x16, 4	; 22
 1a8:	10 c0       	rjmp	.+32     	; 0x1ca <main+0x17c>
			{
				transmitByte('B');
 1aa:	82 e4       	ldi	r24, 0x42	; 66
 1ac:	bc d0       	rcall	.+376    	; 0x326 <transmitByte>
				while((!(PINB & 0x02)) && (!(PINB & 0x10)))
 1ae:	b1 99       	sbic	0x16, 1	; 22
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <main+0x17c>
 1b2:	b4 99       	sbic	0x16, 4	; 22
 1b4:	0a c0       	rjmp	.+20     	; 0x1ca <main+0x17c>
 1b6:	8f e3       	ldi	r24, 0x3F	; 63
 1b8:	9c e9       	ldi	r25, 0x9C	; 156
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <main+0x16c>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x172>
 1c0:	00 00       	nop
 1c2:	b1 99       	sbic	0x16, 1	; 22
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <main+0x17c>
 1c6:	b4 9b       	sbis	0x16, 4	; 22
 1c8:	f6 cf       	rjmp	.-20     	; 0x1b6 <main+0x168>
				_delay_ms(WAIT);
			}
			//======================================================
			if((!(PINB & 0x04)) && (!(PINB & 0x80)))
 1ca:	b2 99       	sbic	0x16, 2	; 22
 1cc:	12 c0       	rjmp	.+36     	; 0x1f2 <main+0x1a4>
 1ce:	b7 99       	sbic	0x16, 7	; 22
 1d0:	10 c0       	rjmp	.+32     	; 0x1f2 <main+0x1a4>
			{
				transmitByte('7');
 1d2:	87 e3       	ldi	r24, 0x37	; 55
 1d4:	a8 d0       	rcall	.+336    	; 0x326 <transmitByte>
				while((!(PINB & 0x04)) && (!(PINB & 0x80)))
 1d6:	b2 99       	sbic	0x16, 2	; 22
 1d8:	0c c0       	rjmp	.+24     	; 0x1f2 <main+0x1a4>
 1da:	b7 99       	sbic	0x16, 7	; 22
 1dc:	0a c0       	rjmp	.+20     	; 0x1f2 <main+0x1a4>
 1de:	8f e3       	ldi	r24, 0x3F	; 63
 1e0:	9c e9       	ldi	r25, 0x9C	; 156
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <main+0x194>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x19a>
 1e8:	00 00       	nop
 1ea:	b2 99       	sbic	0x16, 2	; 22
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <main+0x1a4>
 1ee:	b7 9b       	sbis	0x16, 7	; 22
 1f0:	f6 cf       	rjmp	.-20     	; 0x1de <main+0x190>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x04)) && (!(PINB & 0x40)))
 1f2:	b2 99       	sbic	0x16, 2	; 22
 1f4:	12 c0       	rjmp	.+36     	; 0x21a <main+0x1cc>
 1f6:	b6 99       	sbic	0x16, 6	; 22
 1f8:	10 c0       	rjmp	.+32     	; 0x21a <main+0x1cc>
			{
				transmitByte('8');
 1fa:	88 e3       	ldi	r24, 0x38	; 56
 1fc:	94 d0       	rcall	.+296    	; 0x326 <transmitByte>
				while((!(PINB & 0x04)) && (!(PINB & 0x40)))
 1fe:	b2 99       	sbic	0x16, 2	; 22
 200:	0c c0       	rjmp	.+24     	; 0x21a <main+0x1cc>
 202:	b6 99       	sbic	0x16, 6	; 22
 204:	0a c0       	rjmp	.+20     	; 0x21a <main+0x1cc>
 206:	8f e3       	ldi	r24, 0x3F	; 63
 208:	9c e9       	ldi	r25, 0x9C	; 156
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <main+0x1bc>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x1c2>
 210:	00 00       	nop
 212:	b2 99       	sbic	0x16, 2	; 22
 214:	02 c0       	rjmp	.+4      	; 0x21a <main+0x1cc>
 216:	b6 9b       	sbis	0x16, 6	; 22
 218:	f6 cf       	rjmp	.-20     	; 0x206 <main+0x1b8>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x04)) && (!(PINB & 0x20)))
 21a:	b2 99       	sbic	0x16, 2	; 22
 21c:	12 c0       	rjmp	.+36     	; 0x242 <main+0x1f4>
 21e:	b5 99       	sbic	0x16, 5	; 22
 220:	10 c0       	rjmp	.+32     	; 0x242 <main+0x1f4>
			{
				transmitByte('9');
 222:	89 e3       	ldi	r24, 0x39	; 57
 224:	80 d0       	rcall	.+256    	; 0x326 <transmitByte>
				while((!(PINB & 0x04)) && (!(PINB & 0x20)))
 226:	b2 99       	sbic	0x16, 2	; 22
 228:	0c c0       	rjmp	.+24     	; 0x242 <main+0x1f4>
 22a:	b5 99       	sbic	0x16, 5	; 22
 22c:	0a c0       	rjmp	.+20     	; 0x242 <main+0x1f4>
 22e:	8f e3       	ldi	r24, 0x3F	; 63
 230:	9c e9       	ldi	r25, 0x9C	; 156
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <main+0x1e4>
 236:	00 c0       	rjmp	.+0      	; 0x238 <main+0x1ea>
 238:	00 00       	nop
 23a:	b2 99       	sbic	0x16, 2	; 22
 23c:	02 c0       	rjmp	.+4      	; 0x242 <main+0x1f4>
 23e:	b5 9b       	sbis	0x16, 5	; 22
 240:	f6 cf       	rjmp	.-20     	; 0x22e <main+0x1e0>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x04)) && (!(PINB & 0x10)))
 242:	b2 99       	sbic	0x16, 2	; 22
 244:	12 c0       	rjmp	.+36     	; 0x26a <main+0x21c>
 246:	b4 99       	sbic	0x16, 4	; 22
 248:	10 c0       	rjmp	.+32     	; 0x26a <main+0x21c>
			{
				transmitByte('C');
 24a:	83 e4       	ldi	r24, 0x43	; 67
 24c:	6c d0       	rcall	.+216    	; 0x326 <transmitByte>
				while((!(PINB & 0x04)) && (!(PINB & 0x10)))
 24e:	b2 99       	sbic	0x16, 2	; 22
 250:	0c c0       	rjmp	.+24     	; 0x26a <main+0x21c>
 252:	b4 99       	sbic	0x16, 4	; 22
 254:	0a c0       	rjmp	.+20     	; 0x26a <main+0x21c>
 256:	8f e3       	ldi	r24, 0x3F	; 63
 258:	9c e9       	ldi	r25, 0x9C	; 156
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <main+0x20c>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <main+0x212>
 260:	00 00       	nop
 262:	b2 99       	sbic	0x16, 2	; 22
 264:	02 c0       	rjmp	.+4      	; 0x26a <main+0x21c>
 266:	b4 9b       	sbis	0x16, 4	; 22
 268:	f6 cf       	rjmp	.-20     	; 0x256 <main+0x208>
				_delay_ms(WAIT);
			}
			//======================================================
			if((!(PINB & 0x08)) && (!(PINB & 0x80)))
 26a:	b3 99       	sbic	0x16, 3	; 22
 26c:	12 c0       	rjmp	.+36     	; 0x292 <main+0x244>
 26e:	b7 99       	sbic	0x16, 7	; 22
 270:	10 c0       	rjmp	.+32     	; 0x292 <main+0x244>
			{
				transmitByte('*');
 272:	8a e2       	ldi	r24, 0x2A	; 42
 274:	58 d0       	rcall	.+176    	; 0x326 <transmitByte>
				while((!(PINB & 0x08)) && (!(PINB & 0x80)))
 276:	b3 99       	sbic	0x16, 3	; 22
 278:	0c c0       	rjmp	.+24     	; 0x292 <main+0x244>
 27a:	b7 99       	sbic	0x16, 7	; 22
 27c:	0a c0       	rjmp	.+20     	; 0x292 <main+0x244>
 27e:	8f e3       	ldi	r24, 0x3F	; 63
 280:	9c e9       	ldi	r25, 0x9C	; 156
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <main+0x234>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x23a>
 288:	00 00       	nop
 28a:	b3 99       	sbic	0x16, 3	; 22
 28c:	02 c0       	rjmp	.+4      	; 0x292 <main+0x244>
 28e:	b7 9b       	sbis	0x16, 7	; 22
 290:	f6 cf       	rjmp	.-20     	; 0x27e <main+0x230>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x08)) && (!(PINB & 0x40)))
 292:	b3 99       	sbic	0x16, 3	; 22
 294:	12 c0       	rjmp	.+36     	; 0x2ba <main+0x26c>
 296:	b6 99       	sbic	0x16, 6	; 22
 298:	10 c0       	rjmp	.+32     	; 0x2ba <main+0x26c>
			{
				transmitByte('0');
 29a:	80 e3       	ldi	r24, 0x30	; 48
 29c:	44 d0       	rcall	.+136    	; 0x326 <transmitByte>
				while((!(PINB & 0x08)) && (!(PINB & 0x40)))
 29e:	b3 99       	sbic	0x16, 3	; 22
 2a0:	0c c0       	rjmp	.+24     	; 0x2ba <main+0x26c>
 2a2:	b6 99       	sbic	0x16, 6	; 22
 2a4:	0a c0       	rjmp	.+20     	; 0x2ba <main+0x26c>
 2a6:	8f e3       	ldi	r24, 0x3F	; 63
 2a8:	9c e9       	ldi	r25, 0x9C	; 156
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <main+0x25c>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x262>
 2b0:	00 00       	nop
 2b2:	b3 99       	sbic	0x16, 3	; 22
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <main+0x26c>
 2b6:	b6 9b       	sbis	0x16, 6	; 22
 2b8:	f6 cf       	rjmp	.-20     	; 0x2a6 <main+0x258>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x08)) && (!(PINB & 0x20)))
 2ba:	b3 99       	sbic	0x16, 3	; 22
 2bc:	12 c0       	rjmp	.+36     	; 0x2e2 <main+0x294>
 2be:	b5 99       	sbic	0x16, 5	; 22
 2c0:	10 c0       	rjmp	.+32     	; 0x2e2 <main+0x294>
			{
				transmitByte('#');
 2c2:	83 e2       	ldi	r24, 0x23	; 35
 2c4:	30 d0       	rcall	.+96     	; 0x326 <transmitByte>
				while((!(PINB & 0x08)) && (!(PINB & 0x20)))
 2c6:	b3 99       	sbic	0x16, 3	; 22
 2c8:	0c c0       	rjmp	.+24     	; 0x2e2 <main+0x294>
 2ca:	b5 99       	sbic	0x16, 5	; 22
 2cc:	0a c0       	rjmp	.+20     	; 0x2e2 <main+0x294>
 2ce:	8f e3       	ldi	r24, 0x3F	; 63
 2d0:	9c e9       	ldi	r25, 0x9C	; 156
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <main+0x284>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <main+0x28a>
 2d8:	00 00       	nop
 2da:	b3 99       	sbic	0x16, 3	; 22
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <main+0x294>
 2de:	b5 9b       	sbis	0x16, 5	; 22
 2e0:	f6 cf       	rjmp	.-20     	; 0x2ce <main+0x280>
				_delay_ms(WAIT);
			}
			//------------------------------------------------------
			if((!(PINB & 0x08)) && (!(PINB & 0x10)))
 2e2:	b3 99       	sbic	0x16, 3	; 22
 2e4:	12 c0       	rjmp	.+36     	; 0x30a <main+0x2bc>
 2e6:	b4 99       	sbic	0x16, 4	; 22
 2e8:	10 c0       	rjmp	.+32     	; 0x30a <main+0x2bc>
			{
				transmitByte('D');
 2ea:	84 e4       	ldi	r24, 0x44	; 68
 2ec:	1c d0       	rcall	.+56     	; 0x326 <transmitByte>
				while((!(PINB & 0x08)) && (!(PINB & 0x10)))
 2ee:	b3 99       	sbic	0x16, 3	; 22
 2f0:	0c c0       	rjmp	.+24     	; 0x30a <main+0x2bc>
 2f2:	b4 99       	sbic	0x16, 4	; 22
 2f4:	0a c0       	rjmp	.+20     	; 0x30a <main+0x2bc>
 2f6:	8f e3       	ldi	r24, 0x3F	; 63
 2f8:	9c e9       	ldi	r25, 0x9C	; 156
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x2ac>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x2b2>
 300:	00 00       	nop
 302:	b3 99       	sbic	0x16, 3	; 22
 304:	02 c0       	rjmp	.+4      	; 0x30a <main+0x2bc>
 306:	b4 9b       	sbis	0x16, 4	; 22
 308:	f6 cf       	rjmp	.-20     	; 0x2f6 <main+0x2a8>
	
	USART_Init();
	
	while(1)
	{
		for(unsigned char i = 0; i < 4; i++)
 30a:	1f 5f       	subi	r17, 0xFF	; 255
 30c:	14 30       	cpi	r17, 0x04	; 4
 30e:	08 f4       	brcc	.+2      	; 0x312 <main+0x2c4>
 310:	a7 ce       	rjmp	.-690    	; 0x60 <main+0x12>
 312:	10 2f       	mov	r17, r16
 314:	a5 ce       	rjmp	.-694    	; 0x60 <main+0x12>

00000316 <USART_Init>:
//************************************************
//        Function to initialize USART
//************************************************
void USART_Init()
{
	UCSRB = (1 << RXEN ) | (1 << TXEN );					//Turn on the transmission and reception circuitry
 316:	88 e1       	ldi	r24, 0x18	; 24
 318:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL ) | (1 << UCSZ1 ) | (1 << UCSZ0 );	// Use 8- bit character sizes
 31a:	86 e8       	ldi	r24, 0x86	; 134
 31c:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = (BAUD_PRESCALE >> 8);							//Load upper 8- bits of the baud rate value into the high byte of the UBRR register
 31e:	10 bc       	out	0x20, r1	; 32
	UBRRL = BAUD_PRESCALE;									//Load lower 8 - bits of the baud rate value into the low byte of the UBRR register	
 320:	83 e3       	ldi	r24, 0x33	; 51
 322:	89 b9       	out	0x09, r24	; 9
 324:	08 95       	ret

00000326 <transmitByte>:
//***************************************************
//       Function to transmit a single byte
//***************************************************
void transmitByte(unsigned char data)
{
	while((UCSRA & (1 << UDRE)) == 0) {}; //Do nothing until UDR is ready for more data to be written to it
 326:	5d 9b       	sbis	0x0b, 5	; 11
 328:	fe cf       	rjmp	.-4      	; 0x326 <transmitByte>
	
	UDR = data;
 32a:	8c b9       	out	0x0c, r24	; 12
 32c:	08 95       	ret

0000032e <_exit>:
 32e:	f8 94       	cli

00000330 <__stop_program>:
 330:	ff cf       	rjmp	.-2      	; 0x330 <__stop_program>
